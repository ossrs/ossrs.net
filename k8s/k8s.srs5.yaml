
apiVersion: v1
kind: ConfigMap
metadata:
  name: srs5-config
data:
  srs.conf: |-
    listen              1935;
    max_connections     1000;
    daemon              off;
    http_api {
        enabled         on;
        listen          1985;
    }
    http_server {
        enabled         on;
        listen          8080;
    }
    rtc_server {
      enabled         on;
      listen          8000;
      # Firefox doesn't work with domain.
      #candidate       d.ossrs.net;
      candidate       39.97.171.174;
    }
    vhost __defaultVhost__ {
        rtc {
            enabled     on;
            rtmp_to_rtc on;
            rtc_to_rtmp on;
        }
        http_remux {
            enabled     on;
        }
        hls {
            enabled         on;
        }
    }

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: srs5-deploy
  labels:
    app: srs5
spec:
  replicas: 1
  selector:
    matchLabels:
      app: srs5
  template:
    metadata:
      labels:
        app: srs5
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: srs5-config
      containers:
      - name: srs
        image: registry.cn-hangzhou.aliyuncs.com/ossrs/srs:v5.0.19
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
          limits:
            cpu: 500m
            memory: 500Mi
        ports:
        - containerPort: 1935
        - containerPort: 1985
        - containerPort: 8080
        - containerPort: 8000
          name: udp-service
          protocol: UDP
        volumeMounts:
        - name: config-volume
          mountPath: /usr/local/srs/conf

---

apiVersion: v1
kind: Service
metadata:
  name: srs5-service
spec:
  type: ClusterIP
  selector:
    app: srs5
  ports:
  - name: srs5-service-1935-1935
    port: 1935
    protocol: TCP
    targetPort: 1935
  - name: srs5-service-1985-1985
    port: 1985
    protocol: TCP
    targetPort: 1985
  - name: srs5-service-8080-8080
    port: 8080
    protocol: TCP
    targetPort: 8080

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: srs5-demo-deploy
  labels:
    app: srs5-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: srs5-demo
  template:
    metadata:
      labels:
        app: srs5-demo
    spec:
      containers:
      - name: livestream
        image: registry.cn-hangzhou.aliyuncs.com/ossrs/srs:encoder
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
          limits:
            cpu: 200m
            memory: 200Mi
        command: ["/bin/sh"]
        args:
        - "-c"
        - >
          while true; do
            ffmpeg -re -i ./doc/winlin.300kbps.640x360.baseline.flv -c copy \
              -f flv rtmp://srs5-service/live/livestream && continue;
            sleep 3;
          done
      - name: bbb
        image: registry.cn-hangzhou.aliyuncs.com/ossrs/srs:encoder
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
          limits:
            cpu: 200m
            memory: 200Mi
        command: ["/bin/sh"]
        args:
        - "-c"
        - >
          while true; do
            ffmpeg -re -i ./doc/bbb.300kbps.640x360.baseline.flv -c copy \
              -f flv rtmp://srs5-service/live/bbb && continue;
            sleep 3;
          done
      - name: avatar
        image: registry.cn-hangzhou.aliyuncs.com/ossrs/srs:encoder
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
          limits:
            cpu: 200m
            memory: 200Mi
        command: ["/bin/sh"]
        args:
        - "-c"
        - >
          while true; do
            ffmpeg -re -i ./doc/source.200kbps.768x320.flv -c copy \
              -f flv rtmp://srs5-service/live/avatar && continue;
            sleep 3;
          done

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpx-dsrs-deploy
  labels:
    app: httpx-dsrs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpx-dsrs
  template:
    metadata:
      labels:
        app: httpx-dsrs
    spec:
      volumes:
      - name: ssl-volume
        configMap:
          name: d.ossrs.net
      containers:
      - name: httpx-dsrs
        image: registry.cn-hangzhou.aliyuncs.com/ossrs/httpx:v1.0.18
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 5m
            memory: 10Mi
          limits:
            cpu: 200m
            memory: 200Mi
        command: ["/bin/sh"]
        args:
        - "-c"
        - >
          ./bin/httpx-static
          -http=80 -https=443 -lets=false
          -sdomain d.ossrs.net -skey ./etc/d.ossrs.net.key -scert ./etc/d.ossrs.net.pem
          -proxy=http://srs5-service:1985/rtc/
          -proxy=http://srs5-service:1985/api/
          -proxy=http://sig-service:1989/sig/
          -proxy=http://srs5-service:8080/
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: ssl-volume
          mountPath: /usr/local/etc

---

# SLB for d.ossrs.net
# https://slb.console.aliyun.com/slb/cn-beijing/slbs/lb-2ze7urmv6rmmbywqsoo5r/listeners
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/alicloud-loadbalancer-address-type: intranet
    service.beta.kubernetes.io/alicloud-loadbalancer-force-override-listeners: "true"
    service.beta.kubernetes.io/alicloud-loadbalancer-id: lb-2ze7urmv6rmmbywqsoo5r
  name: srs5-tcp-service
spec:
  type: LoadBalancer
  selector:
    app: srs5
  ports:
  - name: srs5-service-1935-1935
    port: 1935
    protocol: TCP
    targetPort: 1935

---

# SLB for d.ossrs.net
# https://slb.console.aliyun.com/slb/cn-beijing/slbs/lb-2ze7urmv6rmmbywqsoo5r/listeners
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/alicloud-loadbalancer-address-type: intranet
    service.beta.kubernetes.io/alicloud-loadbalancer-force-override-listeners: "true"
    service.beta.kubernetes.io/alicloud-loadbalancer-id: lb-2ze7urmv6rmmbywqsoo5r
  name: httpx-dsrs-service
spec:
  type: LoadBalancer
  selector:
    app: httpx-dsrs
  ports:
  - name: httpx-dsrs-service-1985-80
    port: 1985
    protocol: TCP
    targetPort: 80
  - name: httpx-dsrs-service-8080-80
    port: 8080
    protocol: TCP
    targetPort: 80
  - name: httpx-dsrs-service-80-80
    port: 80
    protocol: TCP
    targetPort: 80
  - name: httpx-dsrs-service-443-443
    port: 443
    protocol: TCP
    targetPort: 443
  - name: httpx-dsrs-service-8443-443
    port: 8443
    protocol: TCP
    targetPort: 443
  - name: httpx-dsrs-service-8088-443
    port: 8088
    protocol: TCP
    targetPort: 443

---

# SLB for d.ossrs.net
# https://slb.console.aliyun.com/slb/cn-beijing/slbs/lb-2ze7urmv6rmmbywqsoo5r/listeners
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/alicloud-loadbalancer-address-type: intranet
    service.beta.kubernetes.io/alicloud-loadbalancer-force-override-listeners: "true"
    service.beta.kubernetes.io/alicloud-loadbalancer-id: lb-2ze7urmv6rmmbywqsoo5r
  name: srs5-udp-service
spec:
  type: LoadBalancer
  selector:
    app: srs5
  ports:
  - name: srs5-udp-service-8000-8000
    port: 8000
    protocol: UDP
    targetPort: 8000

